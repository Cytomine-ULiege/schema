#!/usr/bin/env node

const path = require('path');
const deref = require('json-schema-deref-sync');
const fsp = require('fs-promise');

const schemaRoot = path.join(__dirname, '..', 'src', 'schema');
const baseURL = 'http://geojson.org/schema/'

const command = path.basename(process.argv[1]);
const usage = `${command} <input>

Provided the path to an input schema, ${command} will replace any $ref members
with the resolved schema.  The resulting dereferenced schema is written to
stdout.
`;

function derefSchema(input, schema) {
  const dereferenced = deref(schema, {
    baseFolder: path.dirname(input),
    failOnMissing: true
  });
  if (dereferenced instanceof Error) {
    throw dereferenced;
  }
  Object.assign(dereferenced, {
    $schema: 'http://json-schema.org/draft-04/schema#',
    id: `${baseURL}${path.basename(input)}`
  });
  return dereferenced;
}

if (require.main === module) {
  if (!process.argv[2]) {
    process.stderr.write(usage);
    process.exit(1);
  }
  const input = path.resolve(process.argv[2]);
  fsp.readJson(input)
    .then(json => derefSchema(input, json))
    .then(schema => process.stdout.write(JSON.stringify(schema, null, 2) + '\n'))
    .catch(err => {
      process.stderr.write(`Failed to process ${input}: ${err.message}\n`);
      process.exit(1);
    });
}
